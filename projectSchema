* = key column

**** The user info table contains registration and identification information for each user 
     Entity: user/ player
     Relations to other tables: used to link events to creators and players
                                used to link join requests to certain players 
     Column Names: user_id - primary key that is autogenerated when a new account is created
                   username - the username that the user selects during registration
                   password - the password that the user selects during registration
                   email - the email attached to the users account 
     Normalization: 1NF - relational database
                    2NF - no composite keys
                    3NF - all FD's rely on key
                    4NF - no MVDs****
user_info (user_id*, username, password, email)

**** The sport events table contains location, difficulty, and player information for a given event 
     Entity: sport event
     Relations to other tables: uses user_id to identify which user created the event
     Column Names: event_id - primary key that is autogenerated when a new event is created
                   creator_id - the user id associated with the user that created the event
                   sport_name - type of sport (i.e., volleyball, basketball, spikeball, etc)
                   city - city where event is taking place
                   time - start time of the event
                   date - the day that this event will take place
                   difficulty_level - indicated the intensity of the game/ experience level (i.e., beginner, intermediate, advanced, etc)
                   players_needed - the number of players still needed to have a full game (will be updated as creator accepts join requests) 
     Normalization: 1NF - relational database
                    2NF - no composite keys
                    3NF - all FD rely on key
                    4NF - no MVDs****
sport_events (event_id*, creator_id, sport_name, city, time, date, difficulty_level, players_needed)
  Foreign key: creator_id user_info references user_id
 
 **** The join event table manages user requests to join different events 
      Entity: join request
      Relations to other tables: uses event id to specify which event they are trying to join
                                 uses a user id to specify which user wants to join the event
      Column Names: request_id - primary key autogenerated when a new request is made
                    event_id - foreign key that references event the user wants to join
                    user_id - foreign key that links to information about the user that is trying to join
                    accepted - indicateds status of request (i.e., pending, approved, rejected, etc) 
      Normalization: 1NF - relational database
                     2NF - no composite keys
                     3NF - all FD's rely on key
                     4NF - no MVDs**** 
join_event (request_id*, event_id, user_id, accepted)
  Foreign Key: event_id sport_events references event_id
  Foreign Key: user_id user_info references user_id
  
